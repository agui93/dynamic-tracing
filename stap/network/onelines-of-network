# probes
>> stap -L 'socket.*'
>> stap -L 'tcp.*'
>> stap -L 'udp.*'
>> stap -L 'sctp.*'
>> stap -L 'arp.*'
>> stap -L 'icmp.*'
>> stap -L '*mib.*'
>> stap -L 'tcpmib.*'
>> stap -L 'ipmib.*'
>> stap -L 'linuxmib.*'

>> stap -L 'kernel.function("socket*")'
>> stap -L 'kernel.function("tcp*")'
>> stap -L 'kernel.function("udp*")'
>> stap -L 'kernel.function("arp*")'
>> stap -L 'kernel.function("icmp*")'
>> stap -L 'kernel.function("*mib*")'

>> stap -L 'kernel.function("tcp_retransmit_skb")'
>> stap -L 'kernel.function("inet_csk_accept")'



# Trace tcp receive packets
>> stap -v -T 5 -e 'global pkts; probe tcp.receive { pkts[daddr] <<< 1 }'
>> stap -v -T 5 -e 'global pkts; probe tcp.receive { pkts[saddr, sport, daddr, dport] <<< 1 }'



# Print a trace of threads sending IP packets (UDP or TCP)
stap -v -T 10 -e '
probe netfilter.ip.local_out {
    printf("%s[%d] sent packet to %s:%d\n", execname(), tid(), daddr, dport);
}
'

# Dump tcp like1
stap -v -T 5 -e '
probe tcp.receive {
    printf(" %15s %15s  %5d  %5d  U=%d  A=%d  P=%d  R=%d  S=%d  F=%d\n",
    saddr, daddr, sport, dport, urg, ack, psh, rst, syn, fin)
}
'

# Dump tcp like2
stap -v -T 5 -e '
probe tcp.receive {
    state = tcp_ts_get_info_state($skb)
    printf(" %15s:%-5d %15s:%-5d  U=%d  A=%d  P=%d  R=%d  S=%d  F=%d state=%s[%d]\n",
     saddr, sport, daddr, dport, urg, ack, psh, rst, syn, fin, tcp_sockstate_str(state), state)
}
'

# Trace information for each new incoming TCP connection accepted by the computer
stap -v -T 10 -e '
probe kernel.{function("tcp_accept"),function("g")}.return? {
    sock = $return
    rto = tcp_get_info_rto(sock)
    saddr   = format_ipaddr(__ip_sock_saddr(sock), __ip_sock_family(sock))
    daddr   = format_ipaddr(__ip_sock_daddr(sock), __ip_sock_family(sock))
    sport   = __tcp_sock_sport(sock)
    dport   = __tcp_sock_dport(sock)
    state = tcp_ts_get_info_state(sock)
    printf("%s:%d => %s:%d STATE:%s %d(ms)\n", saddr, sport, daddr, dport, tcp_sockstate_str(state), rto);
}
'

